<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter"> 
		<property name="resultSetLogEnabled" value="false" /> </bean> -->
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="10" />
		<property name="initialSize" value="2" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="5" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 1 " />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="removeAbandoned" value="true" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<!-- <property name="proxyFilters"> <list> <ref bean="log-filter"/> </list> 
			</property> -->
	</bean>
<bean id="queryDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${mysql.jdbc.queryUrl}"/>
        <property name="username" value="${mysql.jdbc.username}"/>
        <property name="password" value="${mysql.jdbc.password}"/>
        <property name="driverClassName" value="${mysql.jdbc.driverClassName}"/> 
        <property name="filters" value="stat"/>
        <property name="maxActive" value="10"/>
        <property name="initialSize" value="2"/>
        <property name="maxWait" value="60000"/>
        <property name="minIdle" value="5"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 1 "/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="removeAbandoned" value="true"/>
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="true"/>
        <!-- 关闭abanded连接时输出错误日志 -->
       <!--  <property name="proxyFilters">
        <list>
            <ref bean="log-filter"/>
        </list>
    </property> -->
    </bean>
	<!-- Mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/mapper/*/*Mapper.xml" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean id="querySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="queryDataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:/mybatis/mapper/*/*Mapper.xml" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="queryDataSource" />
	</bean>
	<bean id="transactionManagerMyBatis"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManagerMyBatis"
		proxy-target-class="true" mode="proxy" />

	<bean id="sharedTransactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManagerMyBatis" />
	</bean>

	<!-- 声明事务模板 -->
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManagerMyBatis" />
	</bean>
</beans>